quarkus.datasource.db-kind=postgresql 
%prod.quarkus.datasource.username=<postgres username>
%prod.quarkus.datasource.password=<postgres passwort>
%prod.quarkus.datasource.reactive.url=postgresql://<postgres uri>:5432/<postgres schema>
quarkus.datasource.reactive.reconnect-attempts=5
quarkus.datasource.reactive.reconnect-interval=60


# Configure the SmallRye Kafka connector
kafka.bootstrap.servers=<cluster internal kafka boostrap uri>:9092
%dev.kafka.bootstrap.servers=<cluster external kafka boostrap uri>:443


# Configure the Kafka sink (we write to it)
mp.messaging.incoming.hackathon-in.connector=smallrye-kafka
mp.messaging.incoming.hackathon-in.topic=hackathon-topic
mp.messaging.incoming.hackathon-in.auto.offset.reset=earliest
mp.messaging.incoming.hackathon-in.value.deserializer=io.quarkus.SourceObjectDeserializer
mp.messaging.incoming.hackathon-in.group.id=nanohackathonclient 

#Self signed certificate for the external Kafka route, we need a truststore 
#%dev.mp.messaging.incoming.hackathon-in.ssl.truststore.location=classes/client.truststore.jks
#%dev.mp.messaging.incoming.hackathon-in.ssl.truststore.password=<jks password>
#%dev.mp.messaging.incoming.hackathon-in.security.protocol=SSL

quarkus.container-image.registry=quay.io
quarkus.container-image.group=<quay username>
#quarkus.container-image.username=
#quarkus.container-image.password=
#quarkus.container-image.builder=jib

%dev.myapp.schema.create=true

